import { a_o_database } from "./a_o_database.module.js";
import { a_o_db_connection_info } from "./a_o_db_connection_info.gitignored.module.js";
import { a_o_model } from "./a_o_model.module.js";
import { f_write_file } from "./f_write_file.module.js"
import { f_s_file_autogenerated_comment } from "./f_s_file_autogenerated_comment.module.js"
import { ensureFile } from "https://deno.land/std@0.170.0/fs/mod.ts";

import {f_o_command} from "https://deno.land/x/o_command@0.5/O_command.module.js"

import { Client } from "https://deno.land/x/mysql/mod.ts";


var f_create = async function(s_model_name, o_model_instance ,o_db_client , o_database = null,){
    var s_table_name = "a_"+s_model_name.toLowerCase();

    if(s_table_name == "object"){
        console.log(`${o_model_instance}: must by an instance of a model which has to be defined in a_o_model.module.js`)
        return 1
    }
    
    var o_model = a_o_model.filter(o=> o.s_name == s_model_name)[0];
    if(!o_model){
        console.log(`${s_model_name}: o_model does not exist in ${a_o_model}`)
        return 1
    }

    // console.log(o_model)
    var a_s_prop_name = []
    var a_value = []
    for(var o_model_property of o_model.a_o_model_property){
        if(o_model_property.b_auto_increment && o_model_instance[o_model_property.s_name] == 0){
            continue
        }
        if(o_model_instance.hasOwnProperty(o_model_property.s_name)){
            a_s_prop_name.push(o_model_property.s_name)
            a_value.push(o_model_instance[o_model_property.s_name])
        }
    }

    var s_query = `INSERT INTO ${s_table_name}(${a_s_prop_name.join(',')}) values(${a_value.map(v => `'${v.toString()}'`).join(',')})`;
    
    console.log(s_query)
    console.log(a_value)

    let o_result = await o_db_client.execute(
        s_query,
        //a_value
    );
    return o_result;
}

var f_read = async function(o_model_instance ,o_db_client , o_database = null){
    
}
var f_update = async function(o_model_instance ,o_db_client , o_database = null){
    
}
var f_delete = async function(o_model_instance ,o_db_client , o_database = null){
    
}

export {
    f_create, 
    f_read, 
    f_update, 
    f_delete, 
}